{"ast":null,"code":"var _jsxFileName = \"/Users/babarhanif/minting dapp/src/mintbtn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport abi from './abi.json';\nimport Web3 from 'web3';\nimport detectEthereumProvider from '@metamask/detect-provider';\nimport { useMoralis } from 'react-moralis';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nrequire('dotenv').config();\n\nconst {\n  REACT_APP_CONTRACT_ADDRESS,\n  REACT_APP_MINT_PRICE,\n  REACT_APP_MINT_PRICE_AFTER_2K\n} = process.env;\nconst SELECTEDNETWORK = '1';\nconst SELECTEDNETWORKNAME = ' ETHEREUM MAINNET';\nconst nftquantity = 10;\n\nfunction Mintbtn() {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [isWalletConnected, setIsWalletConnected] = useState(false);\n  const [errormsg, setErrorMsg] = useState(false);\n  const [hideMinting, setHideMinting] = useState(true);\n  const [quantity, setQuantity] = useState(1);\n  const [totalSupply, settotalSupply] = useState(0);\n  const {\n    authenticate,\n    isAuthenticated,\n    isAuthenticating,\n    user,\n    account,\n    logout\n  } = useMoralis();\n\n  const login = async () => {\n    console.log('isAuthenticated :: ', isAuthenticated);\n\n    if (!isAuthenticated) {\n      await authenticate({\n        signingMessage: 'Log-in BTCBULLDOG'\n      }).then(function (user) {\n        if (user) {\n          toast.success('Wallet connected successfully');\n        }\n\n        console.log('logged in user:', user);\n        console.log(user.get('ethAddress'));\n      }).catch(function (error) {\n        console.log(error);\n      });\n    }\n  };\n\n  const logOut = async () => {\n    await logout();\n    toast.success('Logout successfully');\n    console.log('logged out');\n  };\n\n  const getProvider = () => {\n    //  const { provider } = store.getState();\n    let newProvider = null;\n\n    try {\n      var _window$ethereum, _window$ethereum2;\n\n      if (!window.ethereum) throw new Error('Wallet not found'); //   if (window.ethereum?.providers) {\n      //     newProvider =\n      //       window.ethereum.providers &&\n      //       window.ethereum.providers.find((provider) => provider.isMetaMask);\n      //   }\n\n      if ((_window$ethereum = window.ethereum) !== null && _window$ethereum !== void 0 && _window$ethereum.isCoinbaseWallet || (_window$ethereum2 = window.ethereum) !== null && _window$ethereum2 !== void 0 && _window$ethereum2.overrideIsMetaMask) newProvider = window.ethereum.providers.find(provider => provider.isMetaMask);else newProvider = window.ethereum;\n      return newProvider;\n    } catch (err) {\n      console.log(err, 'ERROR_Wallet'); //   store.dispatch(\n      //     alert({\n      //       title: \"\",\n      //       message: err.message || \"Window.ethereum not found or provider missed\",\n      //       severity: \"error\",\n      //       show: true,\n      //     })\n      //   );\n    }\n  };\n\n  async function MintNFT() {\n    var abi = [{\n      inputs: [{\n        internalType: 'string',\n        name: 'name',\n        type: 'string'\n      }, {\n        internalType: 'string',\n        name: 'symbol',\n        type: 'string'\n      }, {\n        internalType: 'uint256',\n        name: 'mintPrice',\n        type: 'uint256'\n      }, {\n        internalType: 'address',\n        name: 'admin',\n        type: 'address'\n      }, {\n        internalType: 'uint256',\n        name: 'max',\n        type: 'uint256'\n      }],\n      stateMutability: 'nonpayable',\n      type: 'constructor'\n    }, {\n      anonymous: false,\n      inputs: [{\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address'\n      }, {\n        indexed: true,\n        internalType: 'address',\n        name: 'approved',\n        type: 'address'\n      }, {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256'\n      }],\n      name: 'Approval',\n      type: 'event'\n    }, {\n      anonymous: false,\n      inputs: [{\n        indexed: true,\n        internalType: 'address',\n        name: 'owner',\n        type: 'address'\n      }, {\n        indexed: true,\n        internalType: 'address',\n        name: 'operator',\n        type: 'address'\n      }, {\n        indexed: false,\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool'\n      }],\n      name: 'ApprovalForAll',\n      type: 'event'\n    }, {\n      anonymous: false,\n      inputs: [{\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32'\n      }, {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'previousAdminRole',\n        type: 'bytes32'\n      }, {\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'newAdminRole',\n        type: 'bytes32'\n      }],\n      name: 'RoleAdminChanged',\n      type: 'event'\n    }, {\n      anonymous: false,\n      inputs: [{\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32'\n      }, {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address'\n      }, {\n        indexed: true,\n        internalType: 'address',\n        name: 'sender',\n        type: 'address'\n      }],\n      name: 'RoleGranted',\n      type: 'event'\n    }, {\n      anonymous: false,\n      inputs: [{\n        indexed: true,\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32'\n      }, {\n        indexed: true,\n        internalType: 'address',\n        name: 'account',\n        type: 'address'\n      }, {\n        indexed: true,\n        internalType: 'address',\n        name: 'sender',\n        type: 'address'\n      }],\n      name: 'RoleRevoked',\n      type: 'event'\n    }, {\n      anonymous: false,\n      inputs: [{\n        indexed: true,\n        internalType: 'address',\n        name: 'from',\n        type: 'address'\n      }, {\n        indexed: true,\n        internalType: 'address',\n        name: 'to',\n        type: 'address'\n      }, {\n        indexed: true,\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256'\n      }],\n      name: 'Transfer',\n      type: 'event'\n    }, {\n      inputs: [],\n      name: 'DEFAULT_ADMIN_ROLE',\n      outputs: [{\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256'\n      }],\n      name: 'NftCreator',\n      outputs: [{\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'string',\n        name: 'URI',\n        type: 'string'\n      }],\n      name: 'SetcontractURI',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: '_contractMeta',\n      outputs: [{\n        internalType: 'string',\n        name: '',\n        type: 'string'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: '_distributorFee',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: '_feeReciever',\n      outputs: [{\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: '_tokenIdTracker',\n      outputs: [{\n        internalType: 'uint256',\n        name: '_value',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address',\n        name: 'TokenToAdd',\n        type: 'address'\n      }, {\n        internalType: 'uint256',\n        name: 'percent',\n        type: 'uint256'\n      }],\n      name: 'addTokenToBuy',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address',\n        name: 'wallet',\n        type: 'address'\n      }, {\n        internalType: 'uint256',\n        name: 'percent',\n        type: 'uint256'\n      }],\n      name: 'addWalletToBuy',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address',\n        name: 'to',\n        type: 'address'\n      }, {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256'\n      }],\n      name: 'approve',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'artistFeeReciever',\n      outputs: [{\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'artistPercent',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address',\n        name: 'owner',\n        type: 'address'\n      }],\n      name: 'balanceOf',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'canMint',\n      outputs: [{\n        internalType: 'bool',\n        name: '',\n        type: 'bool'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'claimRewards',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'claimRewardsInToken',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'claimTokens',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'contractURI',\n      outputs: [{\n        internalType: 'string',\n        name: '',\n        type: 'string'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      name: 'creator',\n      outputs: [{\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'currentRate',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'deposit',\n      outputs: [],\n      stateMutability: 'payable',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'devFeeReciever',\n      outputs: [{\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address[]',\n        name: 'Adds',\n        type: 'address[]'\n      }],\n      name: 'excludeFromrewardMultiple',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }],\n      name: 'excludedFromRewards',\n      outputs: [{\n        internalType: 'bool',\n        name: '',\n        type: 'bool'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256'\n      }],\n      name: 'getApproved',\n      outputs: [{\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'getMaxSupply',\n      outputs: [{\n        internalType: 'uint256',\n        name: 'max',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'getMintPrice',\n      outputs: [{\n        internalType: 'uint256',\n        name: 'mintPrice',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'getMinted',\n      outputs: [{\n        internalType: 'uint256',\n        name: 'minted',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256'\n      }],\n      name: 'getReflectionBalance',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'getReflectionBalances',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32'\n      }],\n      name: 'getRoleAdmin',\n      outputs: [{\n        internalType: 'bytes32',\n        name: '',\n        type: 'bytes32'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32'\n      }, {\n        internalType: 'uint256',\n        name: 'index',\n        type: 'uint256'\n      }],\n      name: 'getRoleMember',\n      outputs: [{\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32'\n      }],\n      name: 'getRoleMemberCount',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'getServiceFee',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'getStoragePrice',\n      outputs: [{\n        internalType: 'uint256',\n        name: 'storagePrice',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32'\n      }, {\n        internalType: 'address',\n        name: 'account',\n        type: 'address'\n      }],\n      name: 'grantRole',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32'\n      }, {\n        internalType: 'address',\n        name: 'account',\n        type: 'address'\n      }],\n      name: 'hasRole',\n      outputs: [{\n        internalType: 'bool',\n        name: '',\n        type: 'bool'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address',\n        name: 'owner',\n        type: 'address'\n      }, {\n        internalType: 'address',\n        name: 'operator',\n        type: 'address'\n      }],\n      name: 'isApprovedForAll',\n      outputs: [{\n        internalType: 'bool',\n        name: '',\n        type: 'bool'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'isAutostaking',\n      outputs: [{\n        internalType: 'bool',\n        name: '',\n        type: 'bool'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'marketingReciever',\n      outputs: [{\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'maxSupply',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'mint',\n      outputs: [],\n      stateMutability: 'payable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'uint256',\n        name: 'quantity',\n        type: 'uint256'\n      }],\n      name: 'mintMany',\n      outputs: [],\n      stateMutability: 'payable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address[]',\n        name: 'recipients',\n        type: 'address[]'\n      }],\n      name: 'mintMultiples',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'mintPercentage',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'name',\n      outputs: [{\n        internalType: 'string',\n        name: '',\n        type: 'string'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256'\n      }],\n      name: 'ownerOf',\n      outputs: [{\n        internalType: 'address',\n        name: '',\n        type: 'address'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'contract IBEP20',\n        name: 'token',\n        type: 'address'\n      }],\n      name: 'recoverStuckToken',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'reflectPercent',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'reflectionBalance',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address',\n        name: 'TokenToRemove',\n        type: 'address'\n      }],\n      name: 'removeTokenToBuy',\n      outputs: [{\n        internalType: 'bool',\n        name: 'success',\n        type: 'bool'\n      }],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address',\n        name: 'ToRemove',\n        type: 'address'\n      }],\n      name: 'removeWalletToBuy',\n      outputs: [{\n        internalType: 'bool',\n        name: 'success',\n        type: 'bool'\n      }],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32'\n      }, {\n        internalType: 'address',\n        name: 'account',\n        type: 'address'\n      }],\n      name: 'renounceRole',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'bytes32',\n        name: 'role',\n        type: 'bytes32'\n      }, {\n        internalType: 'address',\n        name: 'account',\n        type: 'address'\n      }],\n      name: 'revokeRole',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'router',\n      outputs: [{\n        internalType: 'contract IDEXRouter',\n        name: '',\n        type: 'address'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address',\n        name: 'from',\n        type: 'address'\n      }, {\n        internalType: 'address',\n        name: 'to',\n        type: 'address'\n      }, {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256'\n      }],\n      name: 'safeTransferFrom',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address',\n        name: 'from',\n        type: 'address'\n      }, {\n        internalType: 'address',\n        name: 'to',\n        type: 'address'\n      }, {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256'\n      }, {\n        internalType: 'bytes',\n        name: '_data',\n        type: 'bytes'\n      }],\n      name: 'safeTransferFrom',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address',\n        name: 'newAdmin',\n        type: 'address'\n      }],\n      name: 'setAdditionalAdmin',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address',\n        name: 'operator',\n        type: 'address'\n      }, {\n        internalType: 'bool',\n        name: 'approved',\n        type: 'bool'\n      }],\n      name: 'setApprovalForAll',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address',\n        name: 'receiver',\n        type: 'address'\n      }],\n      name: 'setArtistFeeReciever',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'string',\n        name: 'baseURI',\n        type: 'string'\n      }],\n      name: 'setBaseURI',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address',\n        name: 'reciever',\n        type: 'address'\n      }],\n      name: 'setFeeReciever',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address',\n        name: 'receiver',\n        type: 'address'\n      }],\n      name: 'setMarketingFeeReciever',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'bool',\n        name: 'Allowed',\n        type: 'bool'\n      }],\n      name: 'setMintingEnabled',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'uint256',\n        name: 'percentage',\n        type: 'uint256'\n      }],\n      name: 'setReflectPercent',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256'\n      }, {\n        internalType: 'string',\n        name: '_tokenURI',\n        type: 'string'\n      }],\n      name: 'setTokenURI',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'bytes4',\n        name: 'interfaceId',\n        type: 'bytes4'\n      }],\n      name: 'supportsInterface',\n      outputs: [{\n        internalType: 'bool',\n        name: '',\n        type: 'bool'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'symbol',\n      outputs: [{\n        internalType: 'string',\n        name: '',\n        type: 'string'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'uint256',\n        name: 'index',\n        type: 'uint256'\n      }],\n      name: 'tokenByIndex',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address',\n        name: 'owner',\n        type: 'address'\n      }, {\n        internalType: 'uint256',\n        name: 'index',\n        type: 'uint256'\n      }],\n      name: 'tokenOfOwnerByIndex',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256'\n      }],\n      name: 'tokenURI',\n      outputs: [{\n        internalType: 'string',\n        name: '',\n        type: 'string'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      name: 'tokensToBuy',\n      outputs: [{\n        internalType: 'address',\n        name: 'buyableToken',\n        type: 'address'\n      }, {\n        internalType: 'uint256',\n        name: 'percentage',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'totalCollected',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'totalDividend',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'totalReflectionVolume',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'totalSupply',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [],\n      name: 'totalrewards',\n      outputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'address',\n        name: 'from',\n        type: 'address'\n      }, {\n        internalType: 'address',\n        name: 'to',\n        type: 'address'\n      }, {\n        internalType: 'uint256',\n        name: 'tokenId',\n        type: 'uint256'\n      }],\n      name: 'transferFrom',\n      outputs: [],\n      stateMutability: 'nonpayable',\n      type: 'function'\n    }, {\n      inputs: [{\n        internalType: 'uint256',\n        name: '',\n        type: 'uint256'\n      }],\n      name: 'walletsToSend',\n      outputs: [{\n        internalType: 'address',\n        name: 'walletAddress',\n        type: 'address'\n      }, {\n        internalType: 'uint256',\n        name: 'percentage',\n        type: 'uint256'\n      }],\n      stateMutability: 'view',\n      type: 'function'\n    }, {\n      stateMutability: 'payable',\n      type: 'receive'\n    }];\n    var contractaddress = '0x337156242FA1FC88C4C5c39Ff4d875EAAD9b10Df';\n    const web3 = window.web3;\n    const webeProvider = new Web3(Web3.givenProvider);\n    const accounts = await webeProvider.eth.getAccounts();\n    this.setState({\n      account: accounts[0]\n    });\n    console.log('Sender :  ' + accounts[0]);\n    const instance = new web3.eth.Contract(abi, contractaddress);\n    await instance.methods.mintMany(this.state.receiver, this.state.amount).send({\n      from: accounts[0],\n      value: 50000000000000000 * quantity\n    });\n  }\n\n  useEffect(async () => {\n    async function walletProvider() {\n      // await login();\n      try {\n        if (await detectEthereumProvider()) {\n          // setProvider(true);\n          // window.web3 = new Web3(window.ethereum);\n          const web3 = new Web3(getProvider() || Web3.givenProvider); // const web3 = window.web3;\n\n          if ((await web3.eth.net.getId()) == SELECTEDNETWORK) {\n            const contractaddress = REACT_APP_CONTRACT_ADDRESS;\n            const ct = new web3.eth.Contract(abi, contractaddress);\n            settotalSupply(10);\n\n            if (nftquantity - (await ct.methods.totalSupply().call()) == 0) {\n              setErrorMsg('All NFTs minted, Sale has ended');\n            }\n\n            const prevMetaMaskAccount = await web3.eth.getAccounts(); // console.log(\"prevMetaMaskAccount ==> \", prevMetaMaskAccount);\n\n            const provider = getProvider();\n\n            if (prevMetaMaskAccount.length === 0) {\n              const accountsList = await provider.request({\n                method: 'eth_requestAccounts'\n              }); // console.log(provider, \"accountsList ==> \", accountsList.length);\n\n              if (accountsList && accountsList.length > 0) {\n                toast.success('Metamask wallet connected successfully');\n              }\n            }\n          } else {\n            // setProvider(false);\n            setErrorMsg('Select \"' + SELECTEDNETWORKNAME + '\" network in your wallet to mint the NFT');\n          }\n        } else {\n          setErrorMsg('Non-Ethereum browser detected. You should consider trying MetaMask!'); // setProvider(false);\n        }\n\n        if (window.ethereum) {\n          handleEthereum();\n        } else {\n          window.addEventListener('ethereum#initialized', handleEthereum, {\n            once: true\n          });\n          setTimeout(handleEthereum, 10000);\n        }\n\n        function handleEthereum() {\n          const {\n            ethereum\n          } = window;\n\n          if (ethereum && ethereum.isMetaMask) {\n            console.log('Ethereum successfully detected!'); // setProvider(true);\n          } else {\n            setErrorMsg('Please install MetaMask!'); // setProvider(false);\n          }\n        }\n      } catch (error) {\n        console.log('Error :: ', error);\n\n        if (error && error.code && error.message) {\n          toast.error(error.message);\n        }\n      }\n    } // walletProvider();\n\n  }, []);\n\n  async function resetMinting(ct) {\n    settotalSupply(await ct.methods.totalSupply().call());\n    setQuantity(1);\n    setHideMinting(false);\n  }\n\n  async function loadWeb3() {\n    setHideMinting(true); // await login();\n\n    try {\n      if (await detectEthereumProvider()) {\n        const web3 = new Web3(getProvider() || Web3.givenProvider);\n\n        if ((await web3.eth.net.getId()) == SELECTEDNETWORK) {\n          // creating contract instance\n          const contractaddress = REACT_APP_CONTRACT_ADDRESS;\n          const ct = new web3.eth.Contract(abi, contractaddress);\n          let current = await ct.methods.totalSupply().call();\n          console.log(nftquantity, '======= current ========', current);\n\n          if (Number(current) === nftquantity) {\n            console.log('======= total equal ========');\n            toast.warn('No NFT Found');\n            console.log('Sold out');\n            await resetMinting(ct);\n            return;\n          }\n\n          const baseURIis = await ct.methods.baseURI().call();\n          console.log('get baseURIis ==> ', baseURIis);\n          const provider = getProvider();\n          const prevMetaMaskAccount = await web3.eth.getAccounts(); // console.log(\"prevMetaMaskAccount ==> \", prevMetaMaskAccount);\n\n          if (prevMetaMaskAccount.length === 0) {\n            const accountsList = await provider.request({\n              method: 'eth_requestAccounts'\n            }); // console.log(\"accountsList ==> \", accountsList.length);\n\n            if (accountsList && accountsList.length > 0) {\n              toast.success('Metamask wallet connected successfully');\n            }\n          } // const web3 = window.web3;\n          // Meta Mask Connected Account Address\n\n\n          let metaMaskAccount = await web3.eth.getAccounts();\n          metaMaskAccount = metaMaskAccount[0];\n          const requiredBalance = Number(current) < 2000 ? `${REACT_APP_MINT_PRICE * quantity}` : `${REACT_APP_MINT_PRICE_AFTER_2K * quantity}`;\n          await web3.eth.getBalance(metaMaskAccount, async (err, result) => {\n            if (err) {\n              console.log(err);\n              await resetMinting(ct);\n              return;\n            } else {\n              const walletBalance = web3.utils.fromWei(result, 'ether');\n              console.log('walletBalance ', walletBalance + ' ETH');\n              console.log('Compare Balance: ', walletBalance, requiredBalance);\n\n              if (walletBalance < requiredBalance) {\n                toast.error('Insufficient balance');\n                await resetMinting(ct);\n                return;\n              } else {\n                try {\n                  await ct.methods.mint().send({\n                    from: metaMaskAccount,\n                    value: web3.utils.toBN(web3.utils.toWei(requiredBalance, 'ether'))\n                  }).on('transactionHash', async function (hash) {\n                    console.log('transactionHash :: ', hash);\n                    toast.success('Please wait minting is in progress');\n                    setLoading(true);\n                  }).on('receipt', async function (receipt) {\n                    console.log('receipt :: ', receipt);\n                    toast.success(`You have minted ${quantity} NFT successfully.`);\n                    setLoading(false);\n                    await resetMinting(ct);\n                  });\n                } catch (error) {\n                  await resetMinting(ct);\n                  console.log('Error :: ', error);\n\n                  if (error && error.code && error.message) {\n                    toast.error(error.message);\n                  }\n                }\n              }\n            }\n          });\n        } else {\n          setHideMinting(false);\n          toast.warn('Please Connect to ETHEREUM network');\n          console.log('===== SELECTEDNETWORK failed ==========');\n          setErrorMsg('Select \"' + SELECTEDNETWORKNAME + '\" network in your wallet to mint the NFT');\n        }\n      } else if (window.web3) {\n        console.log('===== detectEthereumProvider failed ==========');\n        window.web3 = new Web3(window.web3.currentProvider);\n      } else {\n        setHideMinting(false);\n        console.log('===== detectEthereumProvider not found =========='); // window.alert(\n        //   \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n        // );\n\n        {\n          setErrorMsg('Non-Ethereum browser detected. You should consider trying MetaMask!');\n        }\n      }\n    } catch (error) {\n      setHideMinting(false);\n      console.log('Error :: ', error);\n\n      if (error && error.code && error.message) {\n        toast.error(error.message);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: !errormsg ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row mintingsection py-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-sm-12\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"yellow\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              display: 'flex',\n              flexDirection: 'row',\n              alignItems: 'center',\n              margin: 'auto',\n              width: '320px'\n            },\n            className: \"mt-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"text-white\",\n              children: \"Quantity\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1164,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                marginLeft: '10px'\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"minus back-button px-3 mx-1\" // disabled={hideMinting}\n                ,\n                onClick: () => {\n                  if (quantity > 1) {\n                    setQuantity(quantity - 1);\n                  }\n                },\n                children: \"-\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1166,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                style: {\n                  fontSize: 30,\n                  margin: '0 15px',\n                  color: '#fff'\n                },\n                children: quantity\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1177,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"plus back-button px-3 mx-1\" //  disabled={hideMinting}\n                ,\n                onClick: () => {\n                  if (quantity < 10) {\n                    setQuantity(quantity + 1);\n                  }\n                },\n                children: \"+\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1182,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1165,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1154,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1153,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"mt-3 mint-btn mx-auto d-block\" // disabled={hideMinting}\n          ,\n          onClick: () => {\n            MintNFT();\n          },\n          children: loading ? 'Loading...' : 'Mint a BTCBULLDOG!'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1196,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1152,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1151,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mt-2 supplytext\",\n      children: /*#__PURE__*/_jsxDEV(\"b\", {\n        children: errormsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1214,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1213,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 1149,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Mintbtn, \"536D41bPTLqmyhH7NvMrIyPx+ec=\", false, function () {\n  return [useMoralis];\n});\n\n_c = Mintbtn;\nexport default Mintbtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"Mintbtn\");","map":{"version":3,"sources":["/Users/babarhanif/minting dapp/src/mintbtn.js"],"names":["React","useState","useEffect","abi","Web3","detectEthereumProvider","useMoralis","toast","require","config","REACT_APP_CONTRACT_ADDRESS","REACT_APP_MINT_PRICE","REACT_APP_MINT_PRICE_AFTER_2K","process","env","SELECTEDNETWORK","SELECTEDNETWORKNAME","nftquantity","Mintbtn","loading","setLoading","isWalletConnected","setIsWalletConnected","errormsg","setErrorMsg","hideMinting","setHideMinting","quantity","setQuantity","totalSupply","settotalSupply","authenticate","isAuthenticated","isAuthenticating","user","account","logout","login","console","log","signingMessage","then","success","get","catch","error","logOut","getProvider","newProvider","window","ethereum","Error","isCoinbaseWallet","overrideIsMetaMask","providers","find","provider","isMetaMask","err","MintNFT","inputs","internalType","name","type","stateMutability","anonymous","indexed","outputs","contractaddress","web3","webeProvider","givenProvider","accounts","eth","getAccounts","setState","instance","Contract","methods","mintMany","state","receiver","amount","send","from","value","walletProvider","net","getId","ct","call","prevMetaMaskAccount","length","accountsList","request","method","handleEthereum","addEventListener","once","setTimeout","code","message","resetMinting","loadWeb3","current","Number","warn","baseURIis","baseURI","metaMaskAccount","requiredBalance","getBalance","result","walletBalance","utils","fromWei","mint","toBN","toWei","on","hash","receipt","currentProvider","display","flexDirection","alignItems","margin","width","marginLeft","fontSize","color"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,sBAAP,MAAmC,2BAAnC;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,KAAT,QAAsB,gBAAtB;;;AACAC,OAAO,CAAC,QAAD,CAAP,CAAkBC,MAAlB;;AAEA,MAAM;AACJC,EAAAA,0BADI;AAEJC,EAAAA,oBAFI;AAGJC,EAAAA;AAHI,IAIFC,OAAO,CAACC,GAJZ;AAKA,MAAMC,eAAe,GAAG,GAAxB;AACA,MAAMC,mBAAmB,GAAG,mBAA5B;AACA,MAAMC,WAAW,GAAG,EAApB;;AAEA,SAASC,OAAT,GAAmB;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBnB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM,CAACoB,iBAAD,EAAoBC,oBAApB,IAA4CrB,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM,CAACsB,QAAD,EAAWC,WAAX,IAA0BvB,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAAC0B,QAAD,EAAWC,WAAX,IAA0B3B,QAAQ,CAAC,CAAD,CAAxC;AACA,QAAM,CAAC4B,WAAD,EAAcC,cAAd,IAAgC7B,QAAQ,CAAC,CAAD,CAA9C;AAEA,QAAM;AACJ8B,IAAAA,YADI;AAEJC,IAAAA,eAFI;AAGJC,IAAAA,gBAHI;AAIJC,IAAAA,IAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA;AANI,MAOF9B,UAAU,EAPd;;AASA,QAAM+B,KAAK,GAAG,YAAY;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCP,eAAnC;;AACA,QAAI,CAACA,eAAL,EAAsB;AACpB,YAAMD,YAAY,CAAC;AAAES,QAAAA,cAAc,EAAE;AAAlB,OAAD,CAAZ,CACHC,IADG,CACE,UAAUP,IAAV,EAAgB;AACpB,YAAIA,IAAJ,EAAU;AACR3B,UAAAA,KAAK,CAACmC,OAAN,CAAc,+BAAd;AACD;;AACDJ,QAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BL,IAA/B;AACAI,QAAAA,OAAO,CAACC,GAAR,CAAYL,IAAI,CAACS,GAAL,CAAS,YAAT,CAAZ;AACD,OAPG,EAQHC,KARG,CAQG,UAAUC,KAAV,EAAiB;AACtBP,QAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACD,OAVG,CAAN;AAWD;AACF,GAfD;;AAiBA,QAAMC,MAAM,GAAG,YAAY;AACzB,UAAMV,MAAM,EAAZ;AACA7B,IAAAA,KAAK,CAACmC,OAAN,CAAc,qBAAd;AACAJ,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ;AACD,GAJD;;AAMA,QAAMQ,WAAW,GAAG,MAAM;AACxB;AACA,QAAIC,WAAW,GAAG,IAAlB;;AACA,QAAI;AAAA;;AACF,UAAI,CAACC,MAAM,CAACC,QAAZ,EAAsB,MAAM,IAAIC,KAAJ,CAAU,kBAAV,CAAN,CADpB,CAEF;AACA;AACA;AACA;AACA;;AACA,UACE,oBAAAF,MAAM,CAACC,QAAP,8DAAiBE,gBAAjB,yBACAH,MAAM,CAACC,QADP,8CACA,kBAAiBG,kBAFnB,EAIEL,WAAW,GAAGC,MAAM,CAACC,QAAP,CAAgBI,SAAhB,CAA0BC,IAA1B,CACXC,QAAD,IAAcA,QAAQ,CAACC,UADX,CAAd,CAJF,KAOKT,WAAW,GAAGC,MAAM,CAACC,QAArB;AACL,aAAOF,WAAP;AACD,KAhBD,CAgBE,OAAOU,GAAP,EAAY;AACZpB,MAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ,EAAiB,cAAjB,EADY,CAEZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD;AACF,GA9BD;;AAiCA,iBAAeC,OAAf,GAAyB;AACvB,QAAIxD,GAAG,GAAG,CACR;AACEyD,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,QAAhB;AAA0BC,QAAAA,IAAI,EAAE,MAAhC;AAAwCC,QAAAA,IAAI,EAAE;AAA9C,OADM,EAEN;AAAEF,QAAAA,YAAY,EAAE,QAAhB;AAA0BC,QAAAA,IAAI,EAAE,QAAhC;AAA0CC,QAAAA,IAAI,EAAE;AAAhD,OAFM,EAGN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,WAAjC;AAA8CC,QAAAA,IAAI,EAAE;AAApD,OAHM,EAIN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,OAAjC;AAA0CC,QAAAA,IAAI,EAAE;AAAhD,OAJM,EAKN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,KAAjC;AAAwCC,QAAAA,IAAI,EAAE;AAA9C,OALM,CADV;AAQEC,MAAAA,eAAe,EAAE,YARnB;AASED,MAAAA,IAAI,EAAE;AATR,KADQ,EAYR;AACEE,MAAAA,SAAS,EAAE,KADb;AAEEL,MAAAA,MAAM,EAAE,CACN;AACEM,QAAAA,OAAO,EAAE,IADX;AAEEL,QAAAA,YAAY,EAAE,SAFhB;AAGEC,QAAAA,IAAI,EAAE,OAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADM,EAON;AACEG,QAAAA,OAAO,EAAE,IADX;AAEEL,QAAAA,YAAY,EAAE,SAFhB;AAGEC,QAAAA,IAAI,EAAE,UAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OAPM,EAaN;AACEG,QAAAA,OAAO,EAAE,IADX;AAEEL,QAAAA,YAAY,EAAE,SAFhB;AAGEC,QAAAA,IAAI,EAAE,SAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OAbM,CAFV;AAsBED,MAAAA,IAAI,EAAE,UAtBR;AAuBEC,MAAAA,IAAI,EAAE;AAvBR,KAZQ,EAqCR;AACEE,MAAAA,SAAS,EAAE,KADb;AAEEL,MAAAA,MAAM,EAAE,CACN;AACEM,QAAAA,OAAO,EAAE,IADX;AAEEL,QAAAA,YAAY,EAAE,SAFhB;AAGEC,QAAAA,IAAI,EAAE,OAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADM,EAON;AACEG,QAAAA,OAAO,EAAE,IADX;AAEEL,QAAAA,YAAY,EAAE,SAFhB;AAGEC,QAAAA,IAAI,EAAE,UAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OAPM,EAaN;AACEG,QAAAA,OAAO,EAAE,KADX;AAEEL,QAAAA,YAAY,EAAE,MAFhB;AAGEC,QAAAA,IAAI,EAAE,UAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OAbM,CAFV;AAsBED,MAAAA,IAAI,EAAE,gBAtBR;AAuBEC,MAAAA,IAAI,EAAE;AAvBR,KArCQ,EA8DR;AACEE,MAAAA,SAAS,EAAE,KADb;AAEEL,MAAAA,MAAM,EAAE,CACN;AACEM,QAAAA,OAAO,EAAE,IADX;AAEEL,QAAAA,YAAY,EAAE,SAFhB;AAGEC,QAAAA,IAAI,EAAE,MAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADM,EAON;AACEG,QAAAA,OAAO,EAAE,IADX;AAEEL,QAAAA,YAAY,EAAE,SAFhB;AAGEC,QAAAA,IAAI,EAAE,mBAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OAPM,EAaN;AACEG,QAAAA,OAAO,EAAE,IADX;AAEEL,QAAAA,YAAY,EAAE,SAFhB;AAGEC,QAAAA,IAAI,EAAE,cAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OAbM,CAFV;AAsBED,MAAAA,IAAI,EAAE,kBAtBR;AAuBEC,MAAAA,IAAI,EAAE;AAvBR,KA9DQ,EAuFR;AACEE,MAAAA,SAAS,EAAE,KADb;AAEEL,MAAAA,MAAM,EAAE,CACN;AACEM,QAAAA,OAAO,EAAE,IADX;AAEEL,QAAAA,YAAY,EAAE,SAFhB;AAGEC,QAAAA,IAAI,EAAE,MAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADM,EAON;AACEG,QAAAA,OAAO,EAAE,IADX;AAEEL,QAAAA,YAAY,EAAE,SAFhB;AAGEC,QAAAA,IAAI,EAAE,SAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OAPM,EAaN;AACEG,QAAAA,OAAO,EAAE,IADX;AAEEL,QAAAA,YAAY,EAAE,SAFhB;AAGEC,QAAAA,IAAI,EAAE,QAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OAbM,CAFV;AAsBED,MAAAA,IAAI,EAAE,aAtBR;AAuBEC,MAAAA,IAAI,EAAE;AAvBR,KAvFQ,EAgHR;AACEE,MAAAA,SAAS,EAAE,KADb;AAEEL,MAAAA,MAAM,EAAE,CACN;AACEM,QAAAA,OAAO,EAAE,IADX;AAEEL,QAAAA,YAAY,EAAE,SAFhB;AAGEC,QAAAA,IAAI,EAAE,MAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADM,EAON;AACEG,QAAAA,OAAO,EAAE,IADX;AAEEL,QAAAA,YAAY,EAAE,SAFhB;AAGEC,QAAAA,IAAI,EAAE,SAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OAPM,EAaN;AACEG,QAAAA,OAAO,EAAE,IADX;AAEEL,QAAAA,YAAY,EAAE,SAFhB;AAGEC,QAAAA,IAAI,EAAE,QAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OAbM,CAFV;AAsBED,MAAAA,IAAI,EAAE,aAtBR;AAuBEC,MAAAA,IAAI,EAAE;AAvBR,KAhHQ,EAyIR;AACEE,MAAAA,SAAS,EAAE,KADb;AAEEL,MAAAA,MAAM,EAAE,CACN;AACEM,QAAAA,OAAO,EAAE,IADX;AAEEL,QAAAA,YAAY,EAAE,SAFhB;AAGEC,QAAAA,IAAI,EAAE,MAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OADM,EAON;AACEG,QAAAA,OAAO,EAAE,IADX;AAEEL,QAAAA,YAAY,EAAE,SAFhB;AAGEC,QAAAA,IAAI,EAAE,IAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OAPM,EAaN;AACEG,QAAAA,OAAO,EAAE,IADX;AAEEL,QAAAA,YAAY,EAAE,SAFhB;AAGEC,QAAAA,IAAI,EAAE,SAHR;AAIEC,QAAAA,IAAI,EAAE;AAJR,OAbM,CAFV;AAsBED,MAAAA,IAAI,EAAE,UAtBR;AAuBEC,MAAAA,IAAI,EAAE;AAvBR,KAzIQ,EAkKR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,oBAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAlKQ,EAyKR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,SAAjC;AAA4CC,QAAAA,IAAI,EAAE;AAAlD,OADM,CADV;AAIED,MAAAA,IAAI,EAAE,YAJR;AAKEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CALX;AAMEC,MAAAA,eAAe,EAAE,MANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KAzKQ,EAkLR;AACEH,MAAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,YAAY,EAAE,QAAhB;AAA0BC,QAAAA,IAAI,EAAE,KAAhC;AAAuCC,QAAAA,IAAI,EAAE;AAA7C,OAAD,CADV;AAEED,MAAAA,IAAI,EAAE,gBAFR;AAGEK,MAAAA,OAAO,EAAE,EAHX;AAIEH,MAAAA,eAAe,EAAE,YAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAlLQ,EAyLR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,eAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,QAAhB;AAA0BC,QAAAA,IAAI,EAAE,EAAhC;AAAoCC,QAAAA,IAAI,EAAE;AAA1C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAzLQ,EAgMR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,iBAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAhMQ,EAuMR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,cAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAvMQ,EA8MR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,iBAFR;AAGEK,MAAAA,OAAO,EAAE,CACP;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,QAAjC;AAA2CC,QAAAA,IAAI,EAAE;AAAjD,OADO,CAHX;AAMEC,MAAAA,eAAe,EAAE,MANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KA9MQ,EAuNR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,YAAjC;AAA+CC,QAAAA,IAAI,EAAE;AAArD,OADM,EAEN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,SAAjC;AAA4CC,QAAAA,IAAI,EAAE;AAAlD,OAFM,CADV;AAKED,MAAAA,IAAI,EAAE,eALR;AAMEK,MAAAA,OAAO,EAAE,EANX;AAOEH,MAAAA,eAAe,EAAE,YAPnB;AAQED,MAAAA,IAAI,EAAE;AARR,KAvNQ,EAiOR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,QAAjC;AAA2CC,QAAAA,IAAI,EAAE;AAAjD,OADM,EAEN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,SAAjC;AAA4CC,QAAAA,IAAI,EAAE;AAAlD,OAFM,CADV;AAKED,MAAAA,IAAI,EAAE,gBALR;AAMEK,MAAAA,OAAO,EAAE,EANX;AAOEH,MAAAA,eAAe,EAAE,YAPnB;AAQED,MAAAA,IAAI,EAAE;AARR,KAjOQ,EA2OR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,IAAjC;AAAuCC,QAAAA,IAAI,EAAE;AAA7C,OADM,EAEN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,SAAjC;AAA4CC,QAAAA,IAAI,EAAE;AAAlD,OAFM,CADV;AAKED,MAAAA,IAAI,EAAE,SALR;AAMEK,MAAAA,OAAO,EAAE,EANX;AAOEH,MAAAA,eAAe,EAAE,YAPnB;AAQED,MAAAA,IAAI,EAAE;AARR,KA3OQ,EAqPR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,mBAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KArPQ,EA4PR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,eAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KA5PQ,EAmQR;AACEH,MAAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,OAAjC;AAA0CC,QAAAA,IAAI,EAAE;AAAhD,OAAD,CADV;AAEED,MAAAA,IAAI,EAAE,WAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAnQQ,EA0QR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,SAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,MAAhB;AAAwBC,QAAAA,IAAI,EAAE,EAA9B;AAAkCC,QAAAA,IAAI,EAAE;AAAxC,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KA1QQ,EAiRR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,cAFR;AAGEK,MAAAA,OAAO,EAAE,EAHX;AAIEH,MAAAA,eAAe,EAAE,YAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAjRQ,EAwRR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,qBAFR;AAGEK,MAAAA,OAAO,EAAE,EAHX;AAIEH,MAAAA,eAAe,EAAE,YAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAxRQ,EA+RR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,aAFR;AAGEK,MAAAA,OAAO,EAAE,EAHX;AAIEH,MAAAA,eAAe,EAAE,YAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KA/RQ,EAsSR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,aAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,QAAhB;AAA0BC,QAAAA,IAAI,EAAE,EAAhC;AAAoCC,QAAAA,IAAI,EAAE;AAA1C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAtSQ,EA6SR;AACEH,MAAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CADV;AAEED,MAAAA,IAAI,EAAE,SAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KA7SQ,EAoTR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,aAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KApTQ,EA2TR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,SAFR;AAGEK,MAAAA,OAAO,EAAE,EAHX;AAIEH,MAAAA,eAAe,EAAE,SAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KA3TQ,EAkUR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,gBAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAlUQ,EAyUR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,WAAhB;AAA6BC,QAAAA,IAAI,EAAE,MAAnC;AAA2CC,QAAAA,IAAI,EAAE;AAAjD,OADM,CADV;AAIED,MAAAA,IAAI,EAAE,2BAJR;AAKEK,MAAAA,OAAO,EAAE,EALX;AAMEH,MAAAA,eAAe,EAAE,YANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KAzUQ,EAkVR;AACEH,MAAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CADV;AAEED,MAAAA,IAAI,EAAE,qBAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,MAAhB;AAAwBC,QAAAA,IAAI,EAAE,EAA9B;AAAkCC,QAAAA,IAAI,EAAE;AAAxC,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAlVQ,EAyVR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,SAAjC;AAA4CC,QAAAA,IAAI,EAAE;AAAlD,OADM,CADV;AAIED,MAAAA,IAAI,EAAE,aAJR;AAKEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CALX;AAMEC,MAAAA,eAAe,EAAE,MANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KAzVQ,EAkWR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,cAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,KAAjC;AAAwCC,QAAAA,IAAI,EAAE;AAA9C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAlWQ,EAyWR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,cAFR;AAGEK,MAAAA,OAAO,EAAE,CACP;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,WAAjC;AAA8CC,QAAAA,IAAI,EAAE;AAApD,OADO,CAHX;AAMEC,MAAAA,eAAe,EAAE,MANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KAzWQ,EAkXR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,WAFR;AAGEK,MAAAA,OAAO,EAAE,CACP;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,QAAjC;AAA2CC,QAAAA,IAAI,EAAE;AAAjD,OADO,CAHX;AAMEC,MAAAA,eAAe,EAAE,MANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KAlXQ,EA2XR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,SAAjC;AAA4CC,QAAAA,IAAI,EAAE;AAAlD,OADM,CADV;AAIED,MAAAA,IAAI,EAAE,sBAJR;AAKEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CALX;AAMEC,MAAAA,eAAe,EAAE,MANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KA3XQ,EAoYR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,uBAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KApYQ,EA2YR;AACEH,MAAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,MAAjC;AAAyCC,QAAAA,IAAI,EAAE;AAA/C,OAAD,CADV;AAEED,MAAAA,IAAI,EAAE,cAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KA3YQ,EAkZR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,MAAjC;AAAyCC,QAAAA,IAAI,EAAE;AAA/C,OADM,EAEN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,OAAjC;AAA0CC,QAAAA,IAAI,EAAE;AAAhD,OAFM,CADV;AAKED,MAAAA,IAAI,EAAE,eALR;AAMEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CANX;AAOEC,MAAAA,eAAe,EAAE,MAPnB;AAQED,MAAAA,IAAI,EAAE;AARR,KAlZQ,EA4ZR;AACEH,MAAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,MAAjC;AAAyCC,QAAAA,IAAI,EAAE;AAA/C,OAAD,CADV;AAEED,MAAAA,IAAI,EAAE,oBAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KA5ZQ,EAmaR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,eAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAnaQ,EA0aR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,iBAFR;AAGEK,MAAAA,OAAO,EAAE,CACP;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,cAAjC;AAAiDC,QAAAA,IAAI,EAAE;AAAvD,OADO,CAHX;AAMEC,MAAAA,eAAe,EAAE,MANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KA1aQ,EAmbR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,MAAjC;AAAyCC,QAAAA,IAAI,EAAE;AAA/C,OADM,EAEN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,SAAjC;AAA4CC,QAAAA,IAAI,EAAE;AAAlD,OAFM,CADV;AAKED,MAAAA,IAAI,EAAE,WALR;AAMEK,MAAAA,OAAO,EAAE,EANX;AAOEH,MAAAA,eAAe,EAAE,YAPnB;AAQED,MAAAA,IAAI,EAAE;AARR,KAnbQ,EA6bR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,MAAjC;AAAyCC,QAAAA,IAAI,EAAE;AAA/C,OADM,EAEN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,SAAjC;AAA4CC,QAAAA,IAAI,EAAE;AAAlD,OAFM,CADV;AAKED,MAAAA,IAAI,EAAE,SALR;AAMEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,MAAhB;AAAwBC,QAAAA,IAAI,EAAE,EAA9B;AAAkCC,QAAAA,IAAI,EAAE;AAAxC,OAAD,CANX;AAOEC,MAAAA,eAAe,EAAE,MAPnB;AAQED,MAAAA,IAAI,EAAE;AARR,KA7bQ,EAucR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,OAAjC;AAA0CC,QAAAA,IAAI,EAAE;AAAhD,OADM,EAEN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,UAAjC;AAA6CC,QAAAA,IAAI,EAAE;AAAnD,OAFM,CADV;AAKED,MAAAA,IAAI,EAAE,kBALR;AAMEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,MAAhB;AAAwBC,QAAAA,IAAI,EAAE,EAA9B;AAAkCC,QAAAA,IAAI,EAAE;AAAxC,OAAD,CANX;AAOEC,MAAAA,eAAe,EAAE,MAPnB;AAQED,MAAAA,IAAI,EAAE;AARR,KAvcQ,EAidR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,eAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,MAAhB;AAAwBC,QAAAA,IAAI,EAAE,EAA9B;AAAkCC,QAAAA,IAAI,EAAE;AAAxC,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAjdQ,EAwdR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,mBAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAxdQ,EA+dR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,WAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KA/dQ,EAseR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,MAFR;AAGEK,MAAAA,OAAO,EAAE,EAHX;AAIEH,MAAAA,eAAe,EAAE,SAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAteQ,EA6eR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,UAAjC;AAA6CC,QAAAA,IAAI,EAAE;AAAnD,OADM,CADV;AAIED,MAAAA,IAAI,EAAE,UAJR;AAKEK,MAAAA,OAAO,EAAE,EALX;AAMEH,MAAAA,eAAe,EAAE,SANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KA7eQ,EAsfR;AACEH,MAAAA,MAAM,EAAE,CACN;AACEC,QAAAA,YAAY,EAAE,WADhB;AAEEC,QAAAA,IAAI,EAAE,YAFR;AAGEC,QAAAA,IAAI,EAAE;AAHR,OADM,CADV;AAQED,MAAAA,IAAI,EAAE,eARR;AASEK,MAAAA,OAAO,EAAE,EATX;AAUEH,MAAAA,eAAe,EAAE,YAVnB;AAWED,MAAAA,IAAI,EAAE;AAXR,KAtfQ,EAmgBR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,gBAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAngBQ,EA0gBR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,MAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,QAAhB;AAA0BC,QAAAA,IAAI,EAAE,EAAhC;AAAoCC,QAAAA,IAAI,EAAE;AAA1C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KA1gBQ,EAihBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,SAAjC;AAA4CC,QAAAA,IAAI,EAAE;AAAlD,OADM,CADV;AAIED,MAAAA,IAAI,EAAE,SAJR;AAKEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CALX;AAMEC,MAAAA,eAAe,EAAE,MANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KAjhBQ,EA0hBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,iBAAhB;AAAmCC,QAAAA,IAAI,EAAE,OAAzC;AAAkDC,QAAAA,IAAI,EAAE;AAAxD,OADM,CADV;AAIED,MAAAA,IAAI,EAAE,mBAJR;AAKEK,MAAAA,OAAO,EAAE,EALX;AAMEH,MAAAA,eAAe,EAAE,YANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KA1hBQ,EAmiBR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,gBAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAniBQ,EA0iBR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,mBAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KA1iBQ,EAijBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,eAAjC;AAAkDC,QAAAA,IAAI,EAAE;AAAxD,OADM,CADV;AAIED,MAAAA,IAAI,EAAE,kBAJR;AAKEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,MAAhB;AAAwBC,QAAAA,IAAI,EAAE,SAA9B;AAAyCC,QAAAA,IAAI,EAAE;AAA/C,OAAD,CALX;AAMEC,MAAAA,eAAe,EAAE,YANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KAjjBQ,EA0jBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,UAAjC;AAA6CC,QAAAA,IAAI,EAAE;AAAnD,OADM,CADV;AAIED,MAAAA,IAAI,EAAE,mBAJR;AAKEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,MAAhB;AAAwBC,QAAAA,IAAI,EAAE,SAA9B;AAAyCC,QAAAA,IAAI,EAAE;AAA/C,OAAD,CALX;AAMEC,MAAAA,eAAe,EAAE,YANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KA1jBQ,EAmkBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,MAAjC;AAAyCC,QAAAA,IAAI,EAAE;AAA/C,OADM,EAEN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,SAAjC;AAA4CC,QAAAA,IAAI,EAAE;AAAlD,OAFM,CADV;AAKED,MAAAA,IAAI,EAAE,cALR;AAMEK,MAAAA,OAAO,EAAE,EANX;AAOEH,MAAAA,eAAe,EAAE,YAPnB;AAQED,MAAAA,IAAI,EAAE;AARR,KAnkBQ,EA6kBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,MAAjC;AAAyCC,QAAAA,IAAI,EAAE;AAA/C,OADM,EAEN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,SAAjC;AAA4CC,QAAAA,IAAI,EAAE;AAAlD,OAFM,CADV;AAKED,MAAAA,IAAI,EAAE,YALR;AAMEK,MAAAA,OAAO,EAAE,EANX;AAOEH,MAAAA,eAAe,EAAE,YAPnB;AAQED,MAAAA,IAAI,EAAE;AARR,KA7kBQ,EAulBR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,QAFR;AAGEK,MAAAA,OAAO,EAAE,CACP;AAAEN,QAAAA,YAAY,EAAE,qBAAhB;AAAuCC,QAAAA,IAAI,EAAE,EAA7C;AAAiDC,QAAAA,IAAI,EAAE;AAAvD,OADO,CAHX;AAMEC,MAAAA,eAAe,EAAE,MANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KAvlBQ,EAgmBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,MAAjC;AAAyCC,QAAAA,IAAI,EAAE;AAA/C,OADM,EAEN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,IAAjC;AAAuCC,QAAAA,IAAI,EAAE;AAA7C,OAFM,EAGN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,SAAjC;AAA4CC,QAAAA,IAAI,EAAE;AAAlD,OAHM,CADV;AAMED,MAAAA,IAAI,EAAE,kBANR;AAOEK,MAAAA,OAAO,EAAE,EAPX;AAQEH,MAAAA,eAAe,EAAE,YARnB;AASED,MAAAA,IAAI,EAAE;AATR,KAhmBQ,EA2mBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,MAAjC;AAAyCC,QAAAA,IAAI,EAAE;AAA/C,OADM,EAEN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,IAAjC;AAAuCC,QAAAA,IAAI,EAAE;AAA7C,OAFM,EAGN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,SAAjC;AAA4CC,QAAAA,IAAI,EAAE;AAAlD,OAHM,EAIN;AAAEF,QAAAA,YAAY,EAAE,OAAhB;AAAyBC,QAAAA,IAAI,EAAE,OAA/B;AAAwCC,QAAAA,IAAI,EAAE;AAA9C,OAJM,CADV;AAOED,MAAAA,IAAI,EAAE,kBAPR;AAQEK,MAAAA,OAAO,EAAE,EARX;AASEH,MAAAA,eAAe,EAAE,YATnB;AAUED,MAAAA,IAAI,EAAE;AAVR,KA3mBQ,EAunBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,UAAjC;AAA6CC,QAAAA,IAAI,EAAE;AAAnD,OADM,CADV;AAIED,MAAAA,IAAI,EAAE,oBAJR;AAKEK,MAAAA,OAAO,EAAE,EALX;AAMEH,MAAAA,eAAe,EAAE,YANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KAvnBQ,EAgoBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,UAAjC;AAA6CC,QAAAA,IAAI,EAAE;AAAnD,OADM,EAEN;AAAEF,QAAAA,YAAY,EAAE,MAAhB;AAAwBC,QAAAA,IAAI,EAAE,UAA9B;AAA0CC,QAAAA,IAAI,EAAE;AAAhD,OAFM,CADV;AAKED,MAAAA,IAAI,EAAE,mBALR;AAMEK,MAAAA,OAAO,EAAE,EANX;AAOEH,MAAAA,eAAe,EAAE,YAPnB;AAQED,MAAAA,IAAI,EAAE;AARR,KAhoBQ,EA0oBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,UAAjC;AAA6CC,QAAAA,IAAI,EAAE;AAAnD,OADM,CADV;AAIED,MAAAA,IAAI,EAAE,sBAJR;AAKEK,MAAAA,OAAO,EAAE,EALX;AAMEH,MAAAA,eAAe,EAAE,YANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KA1oBQ,EAmpBR;AACEH,MAAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,YAAY,EAAE,QAAhB;AAA0BC,QAAAA,IAAI,EAAE,SAAhC;AAA2CC,QAAAA,IAAI,EAAE;AAAjD,OAAD,CADV;AAEED,MAAAA,IAAI,EAAE,YAFR;AAGEK,MAAAA,OAAO,EAAE,EAHX;AAIEH,MAAAA,eAAe,EAAE,YAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAnpBQ,EA0pBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,UAAjC;AAA6CC,QAAAA,IAAI,EAAE;AAAnD,OADM,CADV;AAIED,MAAAA,IAAI,EAAE,gBAJR;AAKEK,MAAAA,OAAO,EAAE,EALX;AAMEH,MAAAA,eAAe,EAAE,YANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KA1pBQ,EAmqBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,UAAjC;AAA6CC,QAAAA,IAAI,EAAE;AAAnD,OADM,CADV;AAIED,MAAAA,IAAI,EAAE,yBAJR;AAKEK,MAAAA,OAAO,EAAE,EALX;AAMEH,MAAAA,eAAe,EAAE,YANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KAnqBQ,EA4qBR;AACEH,MAAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,YAAY,EAAE,MAAhB;AAAwBC,QAAAA,IAAI,EAAE,SAA9B;AAAyCC,QAAAA,IAAI,EAAE;AAA/C,OAAD,CADV;AAEED,MAAAA,IAAI,EAAE,mBAFR;AAGEK,MAAAA,OAAO,EAAE,EAHX;AAIEH,MAAAA,eAAe,EAAE,YAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KA5qBQ,EAmrBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,YAAjC;AAA+CC,QAAAA,IAAI,EAAE;AAArD,OADM,CADV;AAIED,MAAAA,IAAI,EAAE,mBAJR;AAKEK,MAAAA,OAAO,EAAE,EALX;AAMEH,MAAAA,eAAe,EAAE,YANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KAnrBQ,EA4rBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,SAAjC;AAA4CC,QAAAA,IAAI,EAAE;AAAlD,OADM,EAEN;AAAEF,QAAAA,YAAY,EAAE,QAAhB;AAA0BC,QAAAA,IAAI,EAAE,WAAhC;AAA6CC,QAAAA,IAAI,EAAE;AAAnD,OAFM,CADV;AAKED,MAAAA,IAAI,EAAE,aALR;AAMEK,MAAAA,OAAO,EAAE,EANX;AAOEH,MAAAA,eAAe,EAAE,YAPnB;AAQED,MAAAA,IAAI,EAAE;AARR,KA5rBQ,EAssBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,QAAhB;AAA0BC,QAAAA,IAAI,EAAE,aAAhC;AAA+CC,QAAAA,IAAI,EAAE;AAArD,OADM,CADV;AAIED,MAAAA,IAAI,EAAE,mBAJR;AAKEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,MAAhB;AAAwBC,QAAAA,IAAI,EAAE,EAA9B;AAAkCC,QAAAA,IAAI,EAAE;AAAxC,OAAD,CALX;AAMEC,MAAAA,eAAe,EAAE,MANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KAtsBQ,EA+sBR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,QAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,QAAhB;AAA0BC,QAAAA,IAAI,EAAE,EAAhC;AAAoCC,QAAAA,IAAI,EAAE;AAA1C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KA/sBQ,EAstBR;AACEH,MAAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,OAAjC;AAA0CC,QAAAA,IAAI,EAAE;AAAhD,OAAD,CADV;AAEED,MAAAA,IAAI,EAAE,cAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAttBQ,EA6tBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,OAAjC;AAA0CC,QAAAA,IAAI,EAAE;AAAhD,OADM,EAEN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,OAAjC;AAA0CC,QAAAA,IAAI,EAAE;AAAhD,OAFM,CADV;AAKED,MAAAA,IAAI,EAAE,qBALR;AAMEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CANX;AAOEC,MAAAA,eAAe,EAAE,MAPnB;AAQED,MAAAA,IAAI,EAAE;AARR,KA7tBQ,EAuuBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,SAAjC;AAA4CC,QAAAA,IAAI,EAAE;AAAlD,OADM,CADV;AAIED,MAAAA,IAAI,EAAE,UAJR;AAKEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,QAAhB;AAA0BC,QAAAA,IAAI,EAAE,EAAhC;AAAoCC,QAAAA,IAAI,EAAE;AAA1C,OAAD,CALX;AAMEC,MAAAA,eAAe,EAAE,MANnB;AAOED,MAAAA,IAAI,EAAE;AAPR,KAvuBQ,EAgvBR;AACEH,MAAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CADV;AAEED,MAAAA,IAAI,EAAE,aAFR;AAGEK,MAAAA,OAAO,EAAE,CACP;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,cAAjC;AAAiDC,QAAAA,IAAI,EAAE;AAAvD,OADO,EAEP;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,YAAjC;AAA+CC,QAAAA,IAAI,EAAE;AAArD,OAFO,CAHX;AAOEC,MAAAA,eAAe,EAAE,MAPnB;AAQED,MAAAA,IAAI,EAAE;AARR,KAhvBQ,EA0vBR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,gBAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KA1vBQ,EAiwBR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,eAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAjwBQ,EAwwBR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,uBAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAxwBQ,EA+wBR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,aAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KA/wBQ,EAsxBR;AACEH,MAAAA,MAAM,EAAE,EADV;AAEEE,MAAAA,IAAI,EAAE,cAFR;AAGEK,MAAAA,OAAO,EAAE,CAAC;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CAHX;AAIEC,MAAAA,eAAe,EAAE,MAJnB;AAKED,MAAAA,IAAI,EAAE;AALR,KAtxBQ,EA6xBR;AACEH,MAAAA,MAAM,EAAE,CACN;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,MAAjC;AAAyCC,QAAAA,IAAI,EAAE;AAA/C,OADM,EAEN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,IAAjC;AAAuCC,QAAAA,IAAI,EAAE;AAA7C,OAFM,EAGN;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,SAAjC;AAA4CC,QAAAA,IAAI,EAAE;AAAlD,OAHM,CADV;AAMED,MAAAA,IAAI,EAAE,cANR;AAOEK,MAAAA,OAAO,EAAE,EAPX;AAQEH,MAAAA,eAAe,EAAE,YARnB;AASED,MAAAA,IAAI,EAAE;AATR,KA7xBQ,EAwyBR;AACEH,MAAAA,MAAM,EAAE,CAAC;AAAEC,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,EAAjC;AAAqCC,QAAAA,IAAI,EAAE;AAA3C,OAAD,CADV;AAEED,MAAAA,IAAI,EAAE,eAFR;AAGEK,MAAAA,OAAO,EAAE,CACP;AAAEN,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,eAAjC;AAAkDC,QAAAA,IAAI,EAAE;AAAxD,OADO,EAEP;AAAEF,QAAAA,YAAY,EAAE,SAAhB;AAA2BC,QAAAA,IAAI,EAAE,YAAjC;AAA+CC,QAAAA,IAAI,EAAE;AAArD,OAFO,CAHX;AAOEC,MAAAA,eAAe,EAAE,MAPnB;AAQED,MAAAA,IAAI,EAAE;AARR,KAxyBQ,EAkzBR;AAAEC,MAAAA,eAAe,EAAE,SAAnB;AAA8BD,MAAAA,IAAI,EAAE;AAApC,KAlzBQ,CAAV;AAszBA,QAAIK,eAAe,GAAG,4CAAtB;AAEA,UAAMC,IAAI,GAAGpB,MAAM,CAACoB,IAApB;AACA,UAAMC,YAAY,GAAG,IAAIlE,IAAJ,CAASA,IAAI,CAACmE,aAAd,CAArB;AACA,UAAMC,QAAQ,GAAG,MAAMF,YAAY,CAACG,GAAb,CAAiBC,WAAjB,EAAvB;AAEA,SAAKC,QAAL,CAAc;AAAExC,MAAAA,OAAO,EAAEqC,QAAQ,CAAC,CAAD;AAAnB,KAAd;AACAlC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAeiC,QAAQ,CAAC,CAAD,CAAnC;AAEA,UAAMI,QAAQ,GAAG,IAAIP,IAAI,CAACI,GAAL,CAASI,QAAb,CAAsB1E,GAAtB,EAA2BiE,eAA3B,CAAjB;AAEA,UAAMQ,QAAQ,CAACE,OAAT,CACHC,QADG,CACM,KAAKC,KAAL,CAAWC,QADjB,EAC2B,KAAKD,KAAL,CAAWE,MADtC,EAEHC,IAFG,CAEE;AACJC,MAAAA,IAAI,EAAEZ,QAAQ,CAAC,CAAD,CADV;AAEJa,MAAAA,KAAK,EAAI,oBAAoB1D;AAFzB,KAFF,CAAN;AAMD;;AAEDzB,EAAAA,SAAS,CAAC,YAAY;AAGpB,mBAAeoF,cAAf,GAAgC;AAC9B;AAEA,UAAI;AACF,YAAI,MAAMjF,sBAAsB,EAAhC,EAAoC;AAClC;AACA;AACA,gBAAMgE,IAAI,GAAG,IAAIjE,IAAJ,CAAS2C,WAAW,MAAM3C,IAAI,CAACmE,aAA/B,CAAb,CAHkC,CAKlC;;AACA,cAAI,CAAC,MAAMF,IAAI,CAACI,GAAL,CAASc,GAAT,CAAaC,KAAb,EAAP,KAAgCzE,eAApC,EAAqD;AACnD,kBAAMqD,eAAe,GAAG1D,0BAAxB;AACA,kBAAM+E,EAAE,GAAG,IAAIpB,IAAI,CAACI,GAAL,CAASI,QAAb,CAAsB1E,GAAtB,EAA2BiE,eAA3B,CAAX;AACAtC,YAAAA,cAAc,CAAC,EAAD,CAAd;;AAEA,gBAAIb,WAAW,IAAI,MAAMwE,EAAE,CAACX,OAAH,CAAWjD,WAAX,GAAyB6D,IAAzB,EAAV,CAAX,IAAyD,CAA7D,EAAgE;AAC9DlE,cAAAA,WAAW,CAAC,iCAAD,CAAX;AACD;;AAED,kBAAMmE,mBAAmB,GAAG,MAAMtB,IAAI,CAACI,GAAL,CAASC,WAAT,EAAlC,CATmD,CAUnD;;AACA,kBAAMlB,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,gBAAI4C,mBAAmB,CAACC,MAApB,KAA+B,CAAnC,EAAsC;AACpC,oBAAMC,YAAY,GAAG,MAAMrC,QAAQ,CAACsC,OAAT,CAAiB;AAC1CC,gBAAAA,MAAM,EAAE;AADkC,eAAjB,CAA3B,CADoC,CAIpC;;AACA,kBAAIF,YAAY,IAAIA,YAAY,CAACD,MAAb,GAAsB,CAA1C,EAA6C;AAC3CrF,gBAAAA,KAAK,CAACmC,OAAN,CAAc,wCAAd;AACD;AACF;AACF,WAtBD,MAsBO;AACL;AACAlB,YAAAA,WAAW,CACT,aACER,mBADF,GAEE,0CAHO,CAAX;AAKD;AACF,SApCD,MAoCO;AACLQ,UAAAA,WAAW,CACT,qEADS,CAAX,CADK,CAIL;AACD;;AACD,YAAIyB,MAAM,CAACC,QAAX,EAAqB;AACnB8C,UAAAA,cAAc;AACf,SAFD,MAEO;AACL/C,UAAAA,MAAM,CAACgD,gBAAP,CAAwB,sBAAxB,EAAgDD,cAAhD,EAAgE;AAC9DE,YAAAA,IAAI,EAAE;AADwD,WAAhE;AAGAC,UAAAA,UAAU,CAACH,cAAD,EAAiB,KAAjB,CAAV;AACD;;AAED,iBAASA,cAAT,GAA0B;AACxB,gBAAM;AAAE9C,YAAAA;AAAF,cAAeD,MAArB;;AACA,cAAIC,QAAQ,IAAIA,QAAQ,CAACO,UAAzB,EAAqC;AACnCnB,YAAAA,OAAO,CAACC,GAAR,CAAY,iCAAZ,EADmC,CAEnC;AACD,WAHD,MAGO;AACLf,YAAAA,WAAW,CAAC,0BAAD,CAAX,CADK,CAEL;AACD;AACF;AACF,OA9DD,CA8DE,OAAOqB,KAAP,EAAc;AACdP,QAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBM,KAAzB;;AACA,YAAIA,KAAK,IAAIA,KAAK,CAACuD,IAAf,IAAuBvD,KAAK,CAACwD,OAAjC,EAA0C;AACxC9F,UAAAA,KAAK,CAACsC,KAAN,CAAYA,KAAK,CAACwD,OAAlB;AACD;AACF;AACF,KA1EmB,CA2EpB;;AACD,GA5EQ,EA4EN,EA5EM,CAAT;;AA8EA,iBAAeC,YAAf,CAA4Bb,EAA5B,EAAgC;AAC9B3D,IAAAA,cAAc,CAAC,MAAM2D,EAAE,CAACX,OAAH,CAAWjD,WAAX,GAAyB6D,IAAzB,EAAP,CAAd;AACA9D,IAAAA,WAAW,CAAC,CAAD,CAAX;AACAF,IAAAA,cAAc,CAAC,KAAD,CAAd;AACD;;AAED,iBAAe6E,QAAf,GAA0B;AACxB7E,IAAAA,cAAc,CAAC,IAAD,CAAd,CADwB,CAExB;;AAEA,QAAI;AACF,UAAI,MAAMrB,sBAAsB,EAAhC,EAAoC;AAClC,cAAMgE,IAAI,GAAG,IAAIjE,IAAJ,CAAS2C,WAAW,MAAM3C,IAAI,CAACmE,aAA/B,CAAb;;AAEA,YAAI,CAAC,MAAMF,IAAI,CAACI,GAAL,CAASc,GAAT,CAAaC,KAAb,EAAP,KAAgCzE,eAApC,EAAqD;AACnD;AACA,gBAAMqD,eAAe,GAAG1D,0BAAxB;AACA,gBAAM+E,EAAE,GAAG,IAAIpB,IAAI,CAACI,GAAL,CAASI,QAAb,CAAsB1E,GAAtB,EAA2BiE,eAA3B,CAAX;AACA,cAAIoC,OAAO,GAAG,MAAMf,EAAE,CAACX,OAAH,CAAWjD,WAAX,GAAyB6D,IAAzB,EAApB;AACApD,UAAAA,OAAO,CAACC,GAAR,CAAYtB,WAAZ,EAAyB,0BAAzB,EAAqDuF,OAArD;;AACA,cAAIC,MAAM,CAACD,OAAD,CAAN,KAAoBvF,WAAxB,EAAqC;AACnCqB,YAAAA,OAAO,CAACC,GAAR,CAAY,8BAAZ;AACAhC,YAAAA,KAAK,CAACmG,IAAN,CAAW,cAAX;AACApE,YAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,kBAAM+D,YAAY,CAACb,EAAD,CAAlB;AACA;AACD;;AACD,gBAAMkB,SAAS,GAAG,MAAMlB,EAAE,CAACX,OAAH,CAAW8B,OAAX,GAAqBlB,IAArB,EAAxB;AACApD,UAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCoE,SAAlC;AAEA,gBAAMnD,QAAQ,GAAGT,WAAW,EAA5B;AACA,gBAAM4C,mBAAmB,GAAG,MAAMtB,IAAI,CAACI,GAAL,CAASC,WAAT,EAAlC,CAjBmD,CAkBnD;;AAEA,cAAIiB,mBAAmB,CAACC,MAApB,KAA+B,CAAnC,EAAsC;AACpC,kBAAMC,YAAY,GAAG,MAAMrC,QAAQ,CAACsC,OAAT,CAAiB;AAC1CC,cAAAA,MAAM,EAAE;AADkC,aAAjB,CAA3B,CADoC,CAIpC;;AAEA,gBAAIF,YAAY,IAAIA,YAAY,CAACD,MAAb,GAAsB,CAA1C,EAA6C;AAC3CrF,cAAAA,KAAK,CAACmC,OAAN,CAAc,wCAAd;AACD;AACF,WA7BkD,CA+BnD;AAEA;;;AACA,cAAImE,eAAe,GAAG,MAAMxC,IAAI,CAACI,GAAL,CAASC,WAAT,EAA5B;AACAmC,UAAAA,eAAe,GAAGA,eAAe,CAAC,CAAD,CAAjC;AAEA,gBAAMC,eAAe,GACnBL,MAAM,CAACD,OAAD,CAAN,GAAkB,IAAlB,GACK,GAAE7F,oBAAoB,GAAGgB,QAAS,EADvC,GAEK,GAAEf,6BAA6B,GAAGe,QAAS,EAHlD;AAKA,gBAAM0C,IAAI,CAACI,GAAL,CAASsC,UAAT,CAAoBF,eAApB,EAAqC,OAAOnD,GAAP,EAAYsD,MAAZ,KAAuB;AAChE,gBAAItD,GAAJ,EAAS;AACPpB,cAAAA,OAAO,CAACC,GAAR,CAAYmB,GAAZ;AACA,oBAAM4C,YAAY,CAACb,EAAD,CAAlB;AACA;AACD,aAJD,MAIO;AACL,oBAAMwB,aAAa,GAAG5C,IAAI,CAAC6C,KAAL,CAAWC,OAAX,CAAmBH,MAAnB,EAA2B,OAA3B,CAAtB;AACA1E,cAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8B0E,aAAa,GAAG,MAA9C;AACA3E,cAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC0E,aAAjC,EAAgDH,eAAhD;;AACA,kBAAIG,aAAa,GAAGH,eAApB,EAAqC;AACnCvG,gBAAAA,KAAK,CAACsC,KAAN,CAAY,sBAAZ;AACA,sBAAMyD,YAAY,CAACb,EAAD,CAAlB;AACA;AACD,eAJD,MAIO;AACL,oBAAI;AACF,wBAAMA,EAAE,CAACX,OAAH,CACHsC,IADG,GAEHjC,IAFG,CAEE;AACJC,oBAAAA,IAAI,EAAEyB,eADF;AAEJxB,oBAAAA,KAAK,EAAEhB,IAAI,CAAC6C,KAAL,CAAWG,IAAX,CACLhD,IAAI,CAAC6C,KAAL,CAAWI,KAAX,CAAiBR,eAAjB,EAAkC,OAAlC,CADK;AAFH,mBAFF,EAQHS,EARG,CAQA,iBARA,EAQmB,gBAAgBC,IAAhB,EAAsB;AAC3ClF,oBAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ,EAAmCiF,IAAnC;AACAjH,oBAAAA,KAAK,CAACmC,OAAN,CAAc,oCAAd;AACAtB,oBAAAA,UAAU,CAAC,IAAD,CAAV;AACD,mBAZG,EAaHmG,EAbG,CAaA,SAbA,EAaW,gBAAgBE,OAAhB,EAAyB;AACtCnF,oBAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ,EAA2BkF,OAA3B;AACAlH,oBAAAA,KAAK,CAACmC,OAAN,CACG,mBAAkBf,QAAS,oBAD9B;AAGAP,oBAAAA,UAAU,CAAC,KAAD,CAAV;AAEA,0BAAMkF,YAAY,CAACb,EAAD,CAAlB;AACD,mBArBG,CAAN;AAsBD,iBAvBD,CAuBE,OAAO5C,KAAP,EAAc;AACd,wBAAMyD,YAAY,CAACb,EAAD,CAAlB;AACAnD,kBAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBM,KAAzB;;AACA,sBAAIA,KAAK,IAAIA,KAAK,CAACuD,IAAf,IAAuBvD,KAAK,CAACwD,OAAjC,EAA0C;AACxC9F,oBAAAA,KAAK,CAACsC,KAAN,CAAYA,KAAK,CAACwD,OAAlB;AACD;AACF;AACF;AACF;AACF,WA9CK,CAAN;AA+CD,SAzFD,MAyFO;AACL3E,UAAAA,cAAc,CAAC,KAAD,CAAd;AACAnB,UAAAA,KAAK,CAACmG,IAAN,CAAW,oCAAX;AACApE,UAAAA,OAAO,CAACC,GAAR,CAAY,yCAAZ;AACAf,UAAAA,WAAW,CACT,aACER,mBADF,GAEE,0CAHO,CAAX;AAKD;AACF,OAtGD,MAsGO,IAAIiC,MAAM,CAACoB,IAAX,EAAiB;AACtB/B,QAAAA,OAAO,CAACC,GAAR,CAAY,gDAAZ;AACAU,QAAAA,MAAM,CAACoB,IAAP,GAAc,IAAIjE,IAAJ,CAAS6C,MAAM,CAACoB,IAAP,CAAYqD,eAArB,CAAd;AACD,OAHM,MAGA;AACLhG,QAAAA,cAAc,CAAC,KAAD,CAAd;AACAY,QAAAA,OAAO,CAACC,GAAR,CAAY,mDAAZ,EAFK,CAGL;AACA;AACA;;AACA;AACEf,UAAAA,WAAW,CACT,qEADS,CAAX;AAGD;AACF;AACF,KAtHD,CAsHE,OAAOqB,KAAP,EAAc;AACdnB,MAAAA,cAAc,CAAC,KAAD,CAAd;AACAY,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBM,KAAzB;;AACA,UAAIA,KAAK,IAAIA,KAAK,CAACuD,IAAf,IAAuBvD,KAAK,CAACwD,OAAjC,EAA0C;AACxC9F,QAAAA,KAAK,CAACsC,KAAN,CAAYA,KAAK,CAACwD,OAAlB;AACD;AACF;AACF;;AAED,sBACE;AAAA,cACG,CAAC9E,QAAD,gBACC;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,QAAf;AAAA,iCACE;AACE,YAAA,KAAK,EAAE;AACLoG,cAAAA,OAAO,EAAE,MADJ;AAELC,cAAAA,aAAa,EAAE,KAFV;AAGLC,cAAAA,UAAU,EAAE,QAHP;AAILC,cAAAA,MAAM,EAAE,MAJH;AAKLC,cAAAA,KAAK,EAAE;AALF,aADT;AAQE,YAAA,SAAS,EAAC,MARZ;AAAA,oCAUE;AAAI,cAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAVF,eAWE;AAAK,cAAA,KAAK,EAAE;AAAEC,gBAAAA,UAAU,EAAE;AAAd,eAAZ;AAAA,sCACE;AACE,gBAAA,SAAS,EAAC,6BADZ,CAEE;AAFF;AAGE,gBAAA,OAAO,EAAE,MAAM;AACb,sBAAIrG,QAAQ,GAAG,CAAf,EAAkB;AAChBC,oBAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACD;AACF,iBAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAYE;AACE,gBAAA,KAAK,EAAE;AAAEsG,kBAAAA,QAAQ,EAAE,EAAZ;AAAgBH,kBAAAA,MAAM,EAAE,QAAxB;AAAkCI,kBAAAA,KAAK,EAAE;AAAzC,iBADT;AAAA,0BAGGvG;AAHH;AAAA;AAAA;AAAA;AAAA,sBAZF,eAiBE;AACE,gBAAA,SAAS,EAAC,4BADZ,CAEE;AAFF;AAGE,gBAAA,OAAO,EAAE,MAAM;AACb,sBAAIA,QAAQ,GAAG,EAAf,EAAmB;AACjBC,oBAAAA,WAAW,CAACD,QAAQ,GAAG,CAAZ,CAAX;AACD;AACF,iBAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eA4CE;AACE,UAAA,SAAS,EAAC,+BADZ,CAEE;AAFF;AAGE,UAAA,OAAO,EAAE,MAAM;AACbgC,YAAAA,OAAO;AACR,WALH;AAAA,oBAOGxC,OAAO,GAAG,YAAH,GAAkB;AAP5B;AAAA;AAAA;AAAA;AAAA,gBA5CF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADD,gBA+DC;AAAI,MAAA,SAAS,EAAC,iBAAd;AAAA,6BACE;AAAA,kBAAII;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAhEJ;AAAA;AAAA;AAAA;AAAA,UADF;AAuED;;GAjrCQL,O;UAeHZ,U;;;KAfGY,O;AAmrCT,eAAeA,OAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport abi from './abi.json'\nimport Web3 from 'web3'\nimport detectEthereumProvider from '@metamask/detect-provider'\nimport { useMoralis } from 'react-moralis'\nimport { toast } from 'react-toastify'\nrequire('dotenv').config()\n\nconst {\n  REACT_APP_CONTRACT_ADDRESS,\n  REACT_APP_MINT_PRICE,\n  REACT_APP_MINT_PRICE_AFTER_2K,\n} = process.env\nconst SELECTEDNETWORK = '1'\nconst SELECTEDNETWORKNAME = ' ETHEREUM MAINNET'\nconst nftquantity = 10\n\nfunction Mintbtn() {\n  const [loading, setLoading] = useState(false)\n  const [isWalletConnected, setIsWalletConnected] = useState(false)\n  const [errormsg, setErrorMsg] = useState(false)\n  const [hideMinting, setHideMinting] = useState(true)\n  const [quantity, setQuantity] = useState(1)\n  const [totalSupply, settotalSupply] = useState(0)\n\n  const {\n    authenticate,\n    isAuthenticated,\n    isAuthenticating,\n    user,\n    account,\n    logout,\n  } = useMoralis()\n\n  const login = async () => {\n    console.log('isAuthenticated :: ', isAuthenticated)\n    if (!isAuthenticated) {\n      await authenticate({ signingMessage: 'Log-in BTCBULLDOG' })\n        .then(function (user) {\n          if (user) {\n            toast.success('Wallet connected successfully')\n          }\n          console.log('logged in user:', user)\n          console.log(user.get('ethAddress'))\n        })\n        .catch(function (error) {\n          console.log(error)\n        })\n    }\n  }\n\n  const logOut = async () => {\n    await logout()\n    toast.success('Logout successfully')\n    console.log('logged out')\n  }\n\n  const getProvider = () => {\n    //  const { provider } = store.getState();\n    let newProvider = null\n    try {\n      if (!window.ethereum) throw new Error('Wallet not found')\n      //   if (window.ethereum?.providers) {\n      //     newProvider =\n      //       window.ethereum.providers &&\n      //       window.ethereum.providers.find((provider) => provider.isMetaMask);\n      //   }\n      if (\n        window.ethereum?.isCoinbaseWallet ||\n        window.ethereum?.overrideIsMetaMask\n      )\n        newProvider = window.ethereum.providers.find(\n          (provider) => provider.isMetaMask,\n        )\n      else newProvider = window.ethereum\n      return newProvider\n    } catch (err) {\n      console.log(err, 'ERROR_Wallet')\n      //   store.dispatch(\n      //     alert({\n      //       title: \"\",\n      //       message: err.message || \"Window.ethereum not found or provider missed\",\n      //       severity: \"error\",\n      //       show: true,\n      //     })\n      //   );\n    }\n  }\n\n\n  async function MintNFT() {\n    var abi = [\n      {\n        inputs: [\n          { internalType: 'string', name: 'name', type: 'string' },\n          { internalType: 'string', name: 'symbol', type: 'string' },\n          { internalType: 'uint256', name: 'mintPrice', type: 'uint256' },\n          { internalType: 'address', name: 'admin', type: 'address' },\n          { internalType: 'uint256', name: 'max', type: 'uint256' },\n        ],\n        stateMutability: 'nonpayable',\n        type: 'constructor',\n      },\n      {\n        anonymous: false,\n        inputs: [\n          {\n            indexed: true,\n            internalType: 'address',\n            name: 'owner',\n            type: 'address',\n          },\n          {\n            indexed: true,\n            internalType: 'address',\n            name: 'approved',\n            type: 'address',\n          },\n          {\n            indexed: true,\n            internalType: 'uint256',\n            name: 'tokenId',\n            type: 'uint256',\n          },\n        ],\n        name: 'Approval',\n        type: 'event',\n      },\n      {\n        anonymous: false,\n        inputs: [\n          {\n            indexed: true,\n            internalType: 'address',\n            name: 'owner',\n            type: 'address',\n          },\n          {\n            indexed: true,\n            internalType: 'address',\n            name: 'operator',\n            type: 'address',\n          },\n          {\n            indexed: false,\n            internalType: 'bool',\n            name: 'approved',\n            type: 'bool',\n          },\n        ],\n        name: 'ApprovalForAll',\n        type: 'event',\n      },\n      {\n        anonymous: false,\n        inputs: [\n          {\n            indexed: true,\n            internalType: 'bytes32',\n            name: 'role',\n            type: 'bytes32',\n          },\n          {\n            indexed: true,\n            internalType: 'bytes32',\n            name: 'previousAdminRole',\n            type: 'bytes32',\n          },\n          {\n            indexed: true,\n            internalType: 'bytes32',\n            name: 'newAdminRole',\n            type: 'bytes32',\n          },\n        ],\n        name: 'RoleAdminChanged',\n        type: 'event',\n      },\n      {\n        anonymous: false,\n        inputs: [\n          {\n            indexed: true,\n            internalType: 'bytes32',\n            name: 'role',\n            type: 'bytes32',\n          },\n          {\n            indexed: true,\n            internalType: 'address',\n            name: 'account',\n            type: 'address',\n          },\n          {\n            indexed: true,\n            internalType: 'address',\n            name: 'sender',\n            type: 'address',\n          },\n        ],\n        name: 'RoleGranted',\n        type: 'event',\n      },\n      {\n        anonymous: false,\n        inputs: [\n          {\n            indexed: true,\n            internalType: 'bytes32',\n            name: 'role',\n            type: 'bytes32',\n          },\n          {\n            indexed: true,\n            internalType: 'address',\n            name: 'account',\n            type: 'address',\n          },\n          {\n            indexed: true,\n            internalType: 'address',\n            name: 'sender',\n            type: 'address',\n          },\n        ],\n        name: 'RoleRevoked',\n        type: 'event',\n      },\n      {\n        anonymous: false,\n        inputs: [\n          {\n            indexed: true,\n            internalType: 'address',\n            name: 'from',\n            type: 'address',\n          },\n          {\n            indexed: true,\n            internalType: 'address',\n            name: 'to',\n            type: 'address',\n          },\n          {\n            indexed: true,\n            internalType: 'uint256',\n            name: 'tokenId',\n            type: 'uint256',\n          },\n        ],\n        name: 'Transfer',\n        type: 'event',\n      },\n      {\n        inputs: [],\n        name: 'DEFAULT_ADMIN_ROLE',\n        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },\n        ],\n        name: 'NftCreator',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [{ internalType: 'string', name: 'URI', type: 'string' }],\n        name: 'SetcontractURI',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: '_contractMeta',\n        outputs: [{ internalType: 'string', name: '', type: 'string' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: '_distributorFee',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: '_feeReciever',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: '_tokenIdTracker',\n        outputs: [\n          { internalType: 'uint256', name: '_value', type: 'uint256' },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'address', name: 'TokenToAdd', type: 'address' },\n          { internalType: 'uint256', name: 'percent', type: 'uint256' },\n        ],\n        name: 'addTokenToBuy',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'address', name: 'wallet', type: 'address' },\n          { internalType: 'uint256', name: 'percent', type: 'uint256' },\n        ],\n        name: 'addWalletToBuy',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'address', name: 'to', type: 'address' },\n          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },\n        ],\n        name: 'approve',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'artistFeeReciever',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'artistPercent',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [{ internalType: 'address', name: 'owner', type: 'address' }],\n        name: 'balanceOf',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'canMint',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'claimRewards',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'claimRewardsInToken',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'claimTokens',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'contractURI',\n        outputs: [{ internalType: 'string', name: '', type: 'string' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        name: 'creator',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'currentRate',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'deposit',\n        outputs: [],\n        stateMutability: 'payable',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'devFeeReciever',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'address[]', name: 'Adds', type: 'address[]' },\n        ],\n        name: 'excludeFromrewardMultiple',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [{ internalType: 'address', name: '', type: 'address' }],\n        name: 'excludedFromRewards',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },\n        ],\n        name: 'getApproved',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'getMaxSupply',\n        outputs: [{ internalType: 'uint256', name: 'max', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'getMintPrice',\n        outputs: [\n          { internalType: 'uint256', name: 'mintPrice', type: 'uint256' },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'getMinted',\n        outputs: [\n          { internalType: 'uint256', name: 'minted', type: 'uint256' },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },\n        ],\n        name: 'getReflectionBalance',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'getReflectionBalances',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [{ internalType: 'bytes32', name: 'role', type: 'bytes32' }],\n        name: 'getRoleAdmin',\n        outputs: [{ internalType: 'bytes32', name: '', type: 'bytes32' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'bytes32', name: 'role', type: 'bytes32' },\n          { internalType: 'uint256', name: 'index', type: 'uint256' },\n        ],\n        name: 'getRoleMember',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [{ internalType: 'bytes32', name: 'role', type: 'bytes32' }],\n        name: 'getRoleMemberCount',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'getServiceFee',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'getStoragePrice',\n        outputs: [\n          { internalType: 'uint256', name: 'storagePrice', type: 'uint256' },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'bytes32', name: 'role', type: 'bytes32' },\n          { internalType: 'address', name: 'account', type: 'address' },\n        ],\n        name: 'grantRole',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'bytes32', name: 'role', type: 'bytes32' },\n          { internalType: 'address', name: 'account', type: 'address' },\n        ],\n        name: 'hasRole',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'address', name: 'owner', type: 'address' },\n          { internalType: 'address', name: 'operator', type: 'address' },\n        ],\n        name: 'isApprovedForAll',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'isAutostaking',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'marketingReciever',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'maxSupply',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'mint',\n        outputs: [],\n        stateMutability: 'payable',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'uint256', name: 'quantity', type: 'uint256' },\n        ],\n        name: 'mintMany',\n        outputs: [],\n        stateMutability: 'payable',\n        type: 'function',\n      },\n      {\n        inputs: [\n          {\n            internalType: 'address[]',\n            name: 'recipients',\n            type: 'address[]',\n          },\n        ],\n        name: 'mintMultiples',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'mintPercentage',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'name',\n        outputs: [{ internalType: 'string', name: '', type: 'string' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },\n        ],\n        name: 'ownerOf',\n        outputs: [{ internalType: 'address', name: '', type: 'address' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'contract IBEP20', name: 'token', type: 'address' },\n        ],\n        name: 'recoverStuckToken',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'reflectPercent',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'reflectionBalance',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'address', name: 'TokenToRemove', type: 'address' },\n        ],\n        name: 'removeTokenToBuy',\n        outputs: [{ internalType: 'bool', name: 'success', type: 'bool' }],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'address', name: 'ToRemove', type: 'address' },\n        ],\n        name: 'removeWalletToBuy',\n        outputs: [{ internalType: 'bool', name: 'success', type: 'bool' }],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'bytes32', name: 'role', type: 'bytes32' },\n          { internalType: 'address', name: 'account', type: 'address' },\n        ],\n        name: 'renounceRole',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'bytes32', name: 'role', type: 'bytes32' },\n          { internalType: 'address', name: 'account', type: 'address' },\n        ],\n        name: 'revokeRole',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'router',\n        outputs: [\n          { internalType: 'contract IDEXRouter', name: '', type: 'address' },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'address', name: 'from', type: 'address' },\n          { internalType: 'address', name: 'to', type: 'address' },\n          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },\n        ],\n        name: 'safeTransferFrom',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'address', name: 'from', type: 'address' },\n          { internalType: 'address', name: 'to', type: 'address' },\n          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },\n          { internalType: 'bytes', name: '_data', type: 'bytes' },\n        ],\n        name: 'safeTransferFrom',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'address', name: 'newAdmin', type: 'address' },\n        ],\n        name: 'setAdditionalAdmin',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'address', name: 'operator', type: 'address' },\n          { internalType: 'bool', name: 'approved', type: 'bool' },\n        ],\n        name: 'setApprovalForAll',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'address', name: 'receiver', type: 'address' },\n        ],\n        name: 'setArtistFeeReciever',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [{ internalType: 'string', name: 'baseURI', type: 'string' }],\n        name: 'setBaseURI',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'address', name: 'reciever', type: 'address' },\n        ],\n        name: 'setFeeReciever',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'address', name: 'receiver', type: 'address' },\n        ],\n        name: 'setMarketingFeeReciever',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [{ internalType: 'bool', name: 'Allowed', type: 'bool' }],\n        name: 'setMintingEnabled',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'uint256', name: 'percentage', type: 'uint256' },\n        ],\n        name: 'setReflectPercent',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },\n          { internalType: 'string', name: '_tokenURI', type: 'string' },\n        ],\n        name: 'setTokenURI',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'bytes4', name: 'interfaceId', type: 'bytes4' },\n        ],\n        name: 'supportsInterface',\n        outputs: [{ internalType: 'bool', name: '', type: 'bool' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'symbol',\n        outputs: [{ internalType: 'string', name: '', type: 'string' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [{ internalType: 'uint256', name: 'index', type: 'uint256' }],\n        name: 'tokenByIndex',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'address', name: 'owner', type: 'address' },\n          { internalType: 'uint256', name: 'index', type: 'uint256' },\n        ],\n        name: 'tokenOfOwnerByIndex',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },\n        ],\n        name: 'tokenURI',\n        outputs: [{ internalType: 'string', name: '', type: 'string' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        name: 'tokensToBuy',\n        outputs: [\n          { internalType: 'address', name: 'buyableToken', type: 'address' },\n          { internalType: 'uint256', name: 'percentage', type: 'uint256' },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'totalCollected',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'totalDividend',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'totalReflectionVolume',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'totalSupply',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [],\n        name: 'totalrewards',\n        outputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      {\n        inputs: [\n          { internalType: 'address', name: 'from', type: 'address' },\n          { internalType: 'address', name: 'to', type: 'address' },\n          { internalType: 'uint256', name: 'tokenId', type: 'uint256' },\n        ],\n        name: 'transferFrom',\n        outputs: [],\n        stateMutability: 'nonpayable',\n        type: 'function',\n      },\n      {\n        inputs: [{ internalType: 'uint256', name: '', type: 'uint256' }],\n        name: 'walletsToSend',\n        outputs: [\n          { internalType: 'address', name: 'walletAddress', type: 'address' },\n          { internalType: 'uint256', name: 'percentage', type: 'uint256' },\n        ],\n        stateMutability: 'view',\n        type: 'function',\n      },\n      { stateMutability: 'payable', type: 'receive' },\n    ];\n\n\n    var contractaddress = '0x337156242FA1FC88C4C5c39Ff4d875EAAD9b10Df'\n\n    const web3 = window.web3\n    const webeProvider = new Web3(Web3.givenProvider)\n    const accounts = await webeProvider.eth.getAccounts()\n\n    this.setState({ account: accounts[0] })\n    console.log('Sender :  ' + accounts[0])\n\n    const instance = new web3.eth.Contract(abi, contractaddress)\n\n    await instance.methods\n      .mintMany(this.state.receiver, this.state.amount)\n      .send({\n        from: accounts[0],\n        value :  50000000000000000 * quantity\n      })\n  }\n\n  useEffect(async () => {\n   \n\n    async function walletProvider() {\n      // await login();\n\n      try {\n        if (await detectEthereumProvider()) {\n          // setProvider(true);\n          // window.web3 = new Web3(window.ethereum);\n          const web3 = new Web3(getProvider() || Web3.givenProvider)\n\n          // const web3 = window.web3;\n          if ((await web3.eth.net.getId()) == SELECTEDNETWORK) {\n            const contractaddress = REACT_APP_CONTRACT_ADDRESS\n            const ct = new web3.eth.Contract(abi, contractaddress)\n            settotalSupply(10)\n\n            if (nftquantity - (await ct.methods.totalSupply().call()) == 0) {\n              setErrorMsg('All NFTs minted, Sale has ended')\n            }\n\n            const prevMetaMaskAccount = await web3.eth.getAccounts()\n            // console.log(\"prevMetaMaskAccount ==> \", prevMetaMaskAccount);\n            const provider = getProvider()\n\n            if (prevMetaMaskAccount.length === 0) {\n              const accountsList = await provider.request({\n                method: 'eth_requestAccounts',\n              })\n              // console.log(provider, \"accountsList ==> \", accountsList.length);\n              if (accountsList && accountsList.length > 0) {\n                toast.success('Metamask wallet connected successfully')\n              }\n            }\n          } else {\n            // setProvider(false);\n            setErrorMsg(\n              'Select \"' +\n                SELECTEDNETWORKNAME +\n                '\" network in your wallet to mint the NFT',\n            )\n          }\n        } else {\n          setErrorMsg(\n            'Non-Ethereum browser detected. You should consider trying MetaMask!',\n          )\n          // setProvider(false);\n        }\n        if (window.ethereum) {\n          handleEthereum()\n        } else {\n          window.addEventListener('ethereum#initialized', handleEthereum, {\n            once: true,\n          })\n          setTimeout(handleEthereum, 10000)\n        }\n\n        function handleEthereum() {\n          const { ethereum } = window\n          if (ethereum && ethereum.isMetaMask) {\n            console.log('Ethereum successfully detected!')\n            // setProvider(true);\n          } else {\n            setErrorMsg('Please install MetaMask!')\n            // setProvider(false);\n          }\n        }\n      } catch (error) {\n        console.log('Error :: ', error)\n        if (error && error.code && error.message) {\n          toast.error(error.message)\n        }\n      }\n    }\n    // walletProvider();\n  }, [])\n\n  async function resetMinting(ct) {\n    settotalSupply(await ct.methods.totalSupply().call())\n    setQuantity(1)\n    setHideMinting(false)\n  }\n\n  async function loadWeb3() {\n    setHideMinting(true)\n    // await login();\n\n    try {\n      if (await detectEthereumProvider()) {\n        const web3 = new Web3(getProvider() || Web3.givenProvider)\n\n        if ((await web3.eth.net.getId()) == SELECTEDNETWORK) {\n          // creating contract instance\n          const contractaddress = REACT_APP_CONTRACT_ADDRESS\n          const ct = new web3.eth.Contract(abi, contractaddress)\n          let current = await ct.methods.totalSupply().call()\n          console.log(nftquantity, '======= current ========', current)\n          if (Number(current) === nftquantity) {\n            console.log('======= total equal ========')\n            toast.warn('No NFT Found')\n            console.log('Sold out')\n            await resetMinting(ct)\n            return\n          }\n          const baseURIis = await ct.methods.baseURI().call()\n          console.log('get baseURIis ==> ', baseURIis)\n\n          const provider = getProvider()\n          const prevMetaMaskAccount = await web3.eth.getAccounts()\n          // console.log(\"prevMetaMaskAccount ==> \", prevMetaMaskAccount);\n\n          if (prevMetaMaskAccount.length === 0) {\n            const accountsList = await provider.request({\n              method: 'eth_requestAccounts',\n            })\n            // console.log(\"accountsList ==> \", accountsList.length);\n\n            if (accountsList && accountsList.length > 0) {\n              toast.success('Metamask wallet connected successfully')\n            }\n          }\n\n          // const web3 = window.web3;\n\n          // Meta Mask Connected Account Address\n          let metaMaskAccount = await web3.eth.getAccounts()\n          metaMaskAccount = metaMaskAccount[0]\n\n          const requiredBalance =\n            Number(current) < 2000\n              ? `${REACT_APP_MINT_PRICE * quantity}`\n              : `${REACT_APP_MINT_PRICE_AFTER_2K * quantity}`\n\n          await web3.eth.getBalance(metaMaskAccount, async (err, result) => {\n            if (err) {\n              console.log(err)\n              await resetMinting(ct)\n              return\n            } else {\n              const walletBalance = web3.utils.fromWei(result, 'ether')\n              console.log('walletBalance ', walletBalance + ' ETH')\n              console.log('Compare Balance: ', walletBalance, requiredBalance)\n              if (walletBalance < requiredBalance) {\n                toast.error('Insufficient balance')\n                await resetMinting(ct)\n                return\n              } else {\n                try {\n                  await ct.methods\n                    .mint()\n                    .send({\n                      from: metaMaskAccount,\n                      value: web3.utils.toBN(\n                        web3.utils.toWei(requiredBalance, 'ether'),\n                      ),\n                    })\n                    .on('transactionHash', async function (hash) {\n                      console.log('transactionHash :: ', hash)\n                      toast.success('Please wait minting is in progress')\n                      setLoading(true)\n                    })\n                    .on('receipt', async function (receipt) {\n                      console.log('receipt :: ', receipt)\n                      toast.success(\n                        `You have minted ${quantity} NFT successfully.`,\n                      )\n                      setLoading(false)\n\n                      await resetMinting(ct)\n                    })\n                } catch (error) {\n                  await resetMinting(ct)\n                  console.log('Error :: ', error)\n                  if (error && error.code && error.message) {\n                    toast.error(error.message)\n                  }\n                }\n              }\n            }\n          })\n        } else {\n          setHideMinting(false)\n          toast.warn('Please Connect to ETHEREUM network')\n          console.log('===== SELECTEDNETWORK failed ==========')\n          setErrorMsg(\n            'Select \"' +\n              SELECTEDNETWORKNAME +\n              '\" network in your wallet to mint the NFT',\n          )\n        }\n      } else if (window.web3) {\n        console.log('===== detectEthereumProvider failed ==========')\n        window.web3 = new Web3(window.web3.currentProvider)\n      } else {\n        setHideMinting(false)\n        console.log('===== detectEthereumProvider not found ==========')\n        // window.alert(\n        //   \"Non-Ethereum browser detected. You should consider trying MetaMask!\"\n        // );\n        {\n          setErrorMsg(\n            'Non-Ethereum browser detected. You should consider trying MetaMask!',\n          )\n        }\n      }\n    } catch (error) {\n      setHideMinting(false)\n      console.log('Error :: ', error)\n      if (error && error.code && error.message) {\n        toast.error(error.message)\n      }\n    }\n  }\n\n  return (\n    <div>\n      {!errormsg ? (\n        <div className=\"row mintingsection py-5\">\n          <div className=\"col-sm-12\">\n            <div className=\"yellow\">\n              <div\n                style={{\n                  display: 'flex',\n                  flexDirection: 'row',\n                  alignItems: 'center',\n                  margin: 'auto',\n                  width: '320px',\n                }}\n                className=\"mt-2\"\n              >\n                <h3 className=\"text-white\">Quantity</h3>\n                <div style={{ marginLeft: '10px' }}>\n                  <button\n                    className=\"minus back-button px-3 mx-1\"\n                    // disabled={hideMinting}\n                    onClick={() => {\n                      if (quantity > 1) {\n                        setQuantity(quantity - 1)\n                      }\n                    }}\n                  >\n                    -\n                  </button>\n                  <span\n                    style={{ fontSize: 30, margin: '0 15px', color: '#fff' }}\n                  >\n                    {quantity}\n                  </span>\n                  <button\n                    className=\"plus back-button px-3 mx-1\"\n                    //  disabled={hideMinting}\n                    onClick={() => {\n                      if (quantity < 10) {\n                        setQuantity(quantity + 1)\n                      }\n                    }}\n                  >\n                    +\n                  </button>\n                </div>\n              </div>\n            </div>\n            <button\n              className=\"mt-3 mint-btn mx-auto d-block\"\n              // disabled={hideMinting}\n              onClick={() => {\n                MintNFT()\n              }}\n            >\n              {loading ? 'Loading...' : 'Mint a BTCBULLDOG!'}\n            </button>\n            {/* <button\n              className=\"mt-3 mint-btn mx-auto d-block\"\n            >Minting <i class=\"fa fa-spinner fa-spin\"></i></button> */}\n\n            {/* <h5 className=\"mt-2 supplytext\">10  Available Per Wallet</h5> */}\n          </div>\n        </div>\n      ) : (\n        <h5 className=\"mt-2 supplytext\">\n          <b>{errormsg}</b>\n        </h5>\n      )}\n    </div>\n  )\n}\n\nexport default Mintbtn\n"]},"metadata":{},"sourceType":"module"}